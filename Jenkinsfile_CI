pipeline {
    agent none

    environment {
        DOCKERHUB_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKER_IMAGE = 'tonyq2k3/mern-stack-frontend'
    }

    stages {
        stage('SonarQube Analysis') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli:11.3'
                    args '-u root:root'
                }
            }
            steps {
                checkout scm
            }
        }

        stage('Unit Tests') {
            agent {
                docker { 
                    image 'node:23-alpine3.20' 
                    args '-u root:root'
                }
            }
            when {
                changeset "**/src/**"
            }
            steps {
                checkout scm
                sh 'npm ci'
                sh 'npm test -- --watchAll=false'
            }
        }

        // stage('Build Docker Image') {
        //     agent {
        //         docker { 
        //             image 'docker:dind' 
        //             args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
        //         }
        //     }
        //     steps {
        //         checkout scm

        //         script {
        //             sh "git config --global --add safe.directory '${env.WORKSPACE}'"
        //             def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
        //             sh "docker build -t ${DOCKER_IMAGE}:test-${commitHash} ."
        //         }
        //     }
        // }
    }

    post {
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}